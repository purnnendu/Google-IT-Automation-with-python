Testing in Python - Reading Material


Unit Test Cheat-Sheet - 

Best of Unit Testing Standard Library Module

Understand a Basic Example:

    https://docs.python.org/3/library/unittest.html#basic-example

Understand how to run the tests using the Command Line:

    https://docs.python.org/3/library/unittest.html#command-line-interface

Understand various Unit Test Design Patterns:

    https://docs.python.org/3/library/unittest.html#organizing-test-code

Understand the uses of setUp, tearDown; setUpModule and tearDownModule

    Understand basic assertions:
    Method	                    Checks that
    assertEqual(a, b)	          a == b
    assertNotEqual(a, b)      	a != b
    assertTrue(x)	              bool(x) is True
    assertFalse(x)	            bool(x) is False
    assertIs(a, b)	            a is b
    assertIsNot(a, b)	          a is not b
    assertIsNone(x)	            x is None
    assertIsNotNone(x)	        x is not None
    assertIn(a, b)	            a in b
    assertNotIn(a, b)	          a not in b
    assertIsInstance(a, b)	    isinstance(a, b)	3.2
    assertNotIsInstance(a, b)	  not isinstance(a, b)	3.2

Understand more specific assertions such as assertRaises

    https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises


Help with Jupyter Notebooks -

If you want to learn more about Jupyter Notebooks as a technology, check out these resources:

    Jupyter Notebook Tutorial, by datacamp.com (https://www.datacamp.com/community/tutorials/tutorial-jupyter-notebook)
    How to use Jupyter Notebooks, by codeacademy.com (https://www.codecademy.com/articles/how-to-use-jupyter-notebooks)
    Teaching and Learning with Jupyter, by university professors using Jupyter (https://jupyter4edu.github.io/jupyter-edu-book/)


Check out the following links for more information: More About Tests

    https://landing.google.com/sre/sre-book/chapters/monitoring-distributed-systems/
    https://landing.google.com/sre/sre-book/chapters/testing-reliability/
    https://testing.googleblog.com/2007/10/performance-testing.html
    https://www.guru99.com/smoke-testing.html
    https://www.guru99.com/exploratory-testing.html
    https://testing.googleblog.com/2008/09/test-first-is-fun_08.html


Handling Errors Cheat-Sheet-

Raise allows you to throw an exception at any time.

    https://docs.python.org/3/tutorial/errors.html#raising-exceptions

Assert enables you to verify if a certain condition is met and throw an exception if it isnâ€™t.

    https://docs.python.org/3/reference/simple_stmts.html#the-assert-statementhttps://stackoverflow.com/questions/5142418/what-is-the-use-of-assert-in-python

The standard library documentation is kind of unclear. Basically `assert <something false>` will raise AssertionError, which the caller may need to handle.

In the try clause, all statements are executed until an exception is encountered.

    https://docs.python.org/3/tutorial/errors.html#handling-exceptions

Except is used to catch and handle the exception(s) that are encountered in the try clause.

    https://docs.python.org/3/library/exceptions.html#bltin-exceptions

Other interesting Exception handling readings:

    https://doughellmann.com/blog/2009/06/19/python-exception-handling-techniques/
